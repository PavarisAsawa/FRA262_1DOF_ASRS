/*
 * ModeHandler.c
 *
 *  Created on: Apr 27, 2024
 *      Author: emper
 */

#include "ModeHandler.h"
#include "Controller.h"
#include "main.h"

float MAX_SPEED = 200;
uint64_t _BACKDRIVE_FACTOR = 20;
extern TIM_HandleTypeDef htim4;

void Jog_mode(JoystickStructureTypeDef *joystick , QEIStructureTypeDef *QEI)
{

	Joystick_UpdateValue(joystick,QEI);
	if(joystick->Y < 2146 && joystick->Y >1950)
	{
		Motor_Control(_BACKDRIVE_FACTOR);
	}
	else if(joystick->Y > 2146)
	{
		if( (uint16_t)(((joystick->Y-2000)*MAX_SPEED)/2000) > _BACKDRIVE_FACTOR) Motor_Control((uint16_t)(((joystick->Y-2000)*MAX_SPEED)/2000));
		else Motor_Control(_BACKDRIVE_FACTOR);
	}
	else if(joystick->Y < 1950)
	{
		Motor_Control(-(uint16_t)(((1975-joystick->Y)*MAX_SPEED)/1975));
	}
	else Motor_Control(_BACKDRIVE_FACTOR);

}

void Point_mode(PIDStructureTypeDef *PID , QEIStructureTypeDef *QEI,float setpoint)
{
	PIDControllerPosition_Command(PID, QEI, setpoint);
	Motor_Control(PID->Command);
}

void SetHome_mode(FlagTypeDef *flag ,QEIStructureTypeDef *QEI ,float homePos)
{
	static uint8_t pre_state = 0;
	if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_14) && !pre_state)		// IF found PHOTOELECTRIC
	{
		Motor_Control(_BACKDRIVE_FACTOR);
		QEIEncoder_SetHome(QEI , homePos);
		pre_state = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_14);
	}
	else Motor_Control(-100);
}


