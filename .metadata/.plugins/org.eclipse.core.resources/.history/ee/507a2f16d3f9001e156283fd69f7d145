/*
 * Encoder.c
 *
 *  Created on: Apr 10, 2024
 *      Author: emper
 */

#include "Encoder.h"
#include "main.h"

extern uint64_t micros;				// Find time from main.c
uint16_t resolution = 8192; 		// pulse / revolution
void QEIEncoder_Update(TIM_HandleTypeDef* Encoder_tim, QEIStructureTypeDef* QEIdata, uint64_t current_time)
{
	QEIdata->TimeStamp[0] = current_time; 						// index[0] = new time
	QEIdata->Position[0] = __HAL_TIM_GET_COUNTER(Encoder_tim);	// index[0] = new Position

	int64_t diffPosition = QEIdata->Position[0] - QEIdata->Position[1];			// position [pulse]
	float diffTime = (QEIdata->TimeStamp[0]-QEIdata->TimeStamp[1]) * 0.000001; 	// time [seconds]

	if(diffPosition > 2147483648)  diffPosition -= 4294967296;
	if(diffPosition < -2147483648) diffPosition +=  4294967296;

	QEIdata->AngularVelocity = (diffPosition*60)/(diffTime*resolution);

	//Updata NEW[0] to OLD[1] Value
	QEIdata->TimeStamp[1] = QEIdata->TimeStamp[0];
	QEIdata->Position[1] = QEIdata->Position[0];

}
